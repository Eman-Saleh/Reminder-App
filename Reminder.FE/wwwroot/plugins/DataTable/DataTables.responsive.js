/*!
 Responsive 2.0.2
 2014-2016 SpryMedia Ltd - datatables.net/license
*/
(function (a) { "function" === typeof define && define.amd ? define(["jquery", "datatables.net"], function (b) { return a(b, window, document) }) : "object" === typeof exports ? module.exports = function (c, b) { c || (c = window); if (!b || !b.fn.dataTable) { b = require("datatables.net")(c, b).$ } return a(b, c, c.document) } : a(jQuery, window, document) })(function (h, d, b, e) { var g = h.fn.dataTable, a = function (i, c) { if (!g.versionCheck || !g.versionCheck("1.10.3")) { throw "DataTables Responsive requires DataTables 1.10.3 or newer" } this.s = { dt: new g.Api(i), columns: [], current: [] }; this.s.dt.settings()[0].responsive || (c && "string" === typeof c.details ? c.details = { type: c.details } : c && !1 === c.details ? c.details = { type: !1 } : c && !0 === c.details && (c.details = { type: "inline" }), this.c = h.extend(!0, {}, a.defaults, g.defaults.responsive, c), i.responsive = this, this._constructor()) }; h.extend(a.prototype, { _constructor: function () { var i = this, c = this.s.dt, k = c.settings()[0], j = h(d).width(); c.settings()[0]._responsive = this; h(d).on("resize.dtr orientationchange.dtr", g.util.throttle(function () { var l = h(d).width(); l !== j && (i._resize(), j = l) })); k.oApi._fnCallbackReg(k, "aoRowCreatedCallback", function (l) { -1 !== h.inArray(!1, i.s.current) && h("td, th", l).each(function (m) { m = c.column.index("toData", m); !1 === i.s.current[m] && h(this).css("display", "none") }) }); c.on("destroy.dtr", function () { c.off(".dtr"); h(c.table().body()).off(".dtr"); h(d).off("resize.dtr orientationchange.dtr"); h.each(i.s.current, function (l, m) { !1 === m && i._setColumnVis(l, !0) }) }); this.c.breakpoints.sort(function (m, l) { return m.width < l.width ? 1 : m.width > l.width ? -1 : 0 }); this._classLogic(); this._resizeAuto(); k = this.c.details; !1 !== k.type && (i._detailsInit(), c.on("column-visibility.dtr", function () { i._classLogic(); i._resizeAuto(); i._resize() }), c.on("draw.dtr", function () { i._redrawChildren() }), h(c.table().node()).addClass("dtr-" + k.type)); c.on("column-reorder.dtr", function () { i._classLogic(); i._resizeAuto(); i._resize() }); c.on("column-sizing.dtr", function () { i._resize() }); c.on("init.dtr", function () { i._resizeAuto(); i._resize(); h.inArray(false, i.s.current) && c.columns.adjust() }); this._resize() }, _columnsVisiblity: function (r) { var q = this.s.dt, p = this.s.columns, o, n, l = p.map(function (m, i) { return { columnIdx: i, priority: m.priority } }).sort(function (m, i) { return m.priority !== i.priority ? m.priority - i.priority : m.columnIdx - i.columnIdx }), k = h.map(p, function (i) { return i.auto && null === i.minWidth ? !1 : !0 === i.auto ? "-" : -1 !== h.inArray(r, i.includeIn) }), c = 0; o = 0; for (n = k.length; o < n; o++) { !0 === k[o] && (c += p[o].minWidth) } o = q.settings()[0].oScroll; o = o.sY || o.sX ? o.iBarWidth : 0; q = q.table().container().offsetWidth - o - c; o = 0; for (n = k.length; o < n; o++) { p[o].control && (q -= p[o].minWidth) } c = !1; o = 0; for (n = l.length; o < n; o++) { var j = l[o].columnIdx; "-" === k[j] && (!p[j].control && p[j].minWidth) && (c || 0 > q - p[j].minWidth ? (c = !0, k[j] = !1) : k[j] = !0, q -= p[j].minWidth) } l = !1; o = 0; for (n = p.length; o < n; o++) { if (!p[o].control && !p[o].never && !k[o]) { l = !0; break } } o = 0; for (n = p.length; o < n; o++) { p[o].control && (k[o] = l) } -1 === h.inArray(!0, k) && (k[0] = !0); return k }, _classLogic: function () { var i = this, c = this.c.breakpoints, m = this.s.dt, l = m.columns().eq(0).map(function (n) { var o = this.column(n), p = o.header().className, n = m.settings()[0].aoColumns[n].responsivePriority; n === e && (o = h(o.header()).data("priority"), n = o !== e ? 1 * o : 10000); return { className: p, includeIn: [], auto: !1, control: !1, never: p.match(/\bnever\b/) ? !0 : !1, priority: n } }), k = function (n, o) { var p = l[n].includeIn; -1 === h.inArray(o, p) && p.push(o) }, j = function (q, p, n, o) { if (n) { if ("max-" === n) { o = i._find(p).width; p = 0; for (n = c.length; p < n; p++) { c[p].width <= o && k(q, c[p].name) } } else { if ("min-" === n) { o = i._find(p).width; p = 0; for (n = c.length; p < n; p++) { c[p].width >= o && k(q, c[p].name) } } else { if ("not-" === n) { p = 0; for (n = c.length; p < n; p++) { -1 === c[p].name.indexOf(o) && k(q, c[p].name) } } } } } else { l[q].includeIn.push(p) } }; l.each(function (o, s) { for (var t = o.className.split(" "), r = !1, q = 0, n = t.length; q < n; q++) { var p = h.trim(t[q]); if ("all" === p) { r = !0; o.includeIn = h.map(c, function (u) { return u.name }); return } if ("none" === p || o.never) { r = !0; return } if ("control" === p) { r = !0; o.control = !0; return } h.each(c, function (v, u) { var w = u.name.split("-"), x = p.match(RegExp("(min\\-|max\\-|not\\-)?(" + w[0] + ")(\\-[_a-zA-Z0-9])?")); x && (r = !0, x[2] === w[0] && x[3] === "-" + w[1] ? j(s, u.name, x[1], x[2] + x[3]) : x[2] === w[0] && !x[3] && j(s, u.name, x[1], x[2])) }) } r || (o.auto = !0) }); this.s.columns = l }, _detailsDisplay: function (i, c) { var m = this, l = this.s.dt, k = this.c.details; if (k && k.type) { var j = k.display(i, c, function () { return k.renderer(l, i[0], m._detailsObj(i[0])) }); (!0 === j || !1 === j) && h(l.table().node()).triggerHandler("responsive-display.dt", [l, i, j, c]) } }, _detailsInit: function () { var i = this, c = this.s.dt, k = this.c.details; "inline" === k.type && (k.target = "td:first-child, th:first-child"); c.on("draw.dtr", function () { i._tabIndexes() }); i._tabIndexes(); h(c.table().body()).on("keyup.dtr", "td, th", function (l) { l.keyCode === 13 && h(this).data("dtr-keyboard") && h(this).click() }); var j = k.target; h(c.table().body()).on("click.dtr mousedown.dtr mouseup.dtr", "string" === typeof j ? j : "td, th", function (m) { if (h(c.table().node()).hasClass("collapsed") && c.row(h(this).closest("tr")).length) { if (typeof j === "number") { var l = j < 0 ? c.columns().eq(0).length + j : j; if (c.cell(this).index().column !== l) { return } } l = c.row(h(this).closest("tr")); m.type === "click" ? i._detailsDisplay(l, false) : m.type === "mousedown" ? h(this).css("outline", "none") : m.type === "mouseup" && h(this).blur().css("outline", "") } }) }, _detailsObj: function (i) { var c = this, j = this.s.dt; return h.map(this.s.columns, function (k, l) { if (!k.never) { return { title: j.settings()[0].aoColumns[l].sTitle, data: j.cell(i, l).render(c.c.orthogonal), hidden: j.column(l).visible() && !c.s.current[l], columnIndex: l, rowIndex: i } } }) }, _find: function (j) { for (var i = this.c.breakpoints, k = 0, l = i.length; k < l; k++) { if (i[k].name === j) { return i[k] } } }, _redrawChildren: function () { var i = this, c = this.s.dt; c.rows({ page: "current" }).iterator("row", function (j, k) { c.row(k); i._detailsDisplay(c.row(k), !0) }) }, _resize: function () { var t = this, s = this.s.dt, r = h(d).width(), q = this.c.breakpoints, p = q[0].name, o = this.s.columns, n, c = this.s.current.slice(); for (n = q.length - 1; 0 <= n; n--) { if (r <= q[n].width) { p = q[n].name; break } } var l = this._columnsVisiblity(p); this.s.current = l; q = !1; n = 0; for (r = o.length; n < r; n++) { if (!1 === l[n] && !o[n].never && !o[n].control) { q = !0; break } } h(s.table().node()).toggleClass("collapsed", q); var j = !1; s.columns().eq(0).each(function (i, k) { l[k] !== c[k] && (j = !0, t._setColumnVis(i, l[k])) }); j && (this._redrawChildren(), h(s.table().node()).trigger("responsive-resize.dt", [s, this.s.current])) }, _resizeAuto: function () { var i = this.s.dt, c = this.s.columns; if (this.c.auto && -1 !== h.inArray(!0, h.map(c, function (o) { return o.auto }))) { i.table().node(); var n = i.table().node().cloneNode(!1), m = h(i.table().header().cloneNode(!1)).appendTo(n), l = h(i.table().body()).clone(!1, !1).empty().appendTo(n), k = i.columns().header().filter(function (o) { return i.column(o).visible() }).to$().clone(!1).css("display", "table-cell"); h(l).append(h(i.rows({ page: "current" }).nodes()).clone(!1)).find("th, td").css("display", ""); if (l = i.table().footer()) { var l = h(l.cloneNode(!1)).appendTo(n), j = i.columns().header().filter(function (o) { return i.column(o).visible() }).to$().clone(!1).css("display", "table-cell"); h("<tr/>").append(j).appendTo(l) } h("<tr/>").append(k).appendTo(m); "inline" === this.c.details.type && h(n).addClass("dtr-inline collapsed"); n = h("<div/>").css({ width: 1, height: 1, overflow: "hidden" }).append(n); n.insertBefore(i.table().node()); k.each(function (o) { o = i.column.index("fromVisible", o); c[o].minWidth = this.offsetWidth || 0 }); n.remove() } }, _setColumnVis: function (i, c) { var k = this.s.dt, j = c ? "" : "none"; h(k.column(i).header()).css("display", j); h(k.column(i).footer()).css("display", j); k.column(i).nodes().to$().css("display", j) }, _tabIndexes: function () { var i = this.s.dt, c = i.cells({ page: "current" }).nodes().to$(), k = i.settings()[0], j = this.c.details.target; c.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]"); h("number" === typeof j ? ":eq(" + j + ")" : j, i.rows({ page: "current" }).nodes()).attr("tabIndex", k.iTabIndex).data("dtr-keyboard", 1) } }); a.breakpoints = [{ name: "desktop", width: Infinity }, { name: "tablet-l", width: 1024 }, { name: "tablet-p", width: 768 }, { name: "mobile-l", width: 480 }, { name: "mobile-p", width: 320 }]; a.display = { childRow: function (i, c, j) { if (c) { if (h(i.node()).hasClass("parent")) { return i.child(j(), "child").show(), !0 } } else { if (i.child.isShown()) { return i.child(!1), h(i.node()).removeClass("parent"), !1 } i.child(j(), "child").show(); h(i.node()).addClass("parent"); return !0 } }, childRowImmediate: function (i, c, j) { if (!c && i.child.isShown() || !i.responsive.hasHidden()) { return i.child(!1), h(i.node()).removeClass("parent"), !1 } i.child(j(), "child").show(); h(i.node()).addClass("parent"); return !0 }, modal: function (c) { return function (i, m, l) { if (m) { h("div.dtr-modal-content").empty().append(l()) } else { var k = function () { j.remove(); h(b).off("keypress.dtr") }, j = h('<div class="dtr-modal"/>').append(h('<div class="dtr-modal-display"/>').append(h('<div class="dtr-modal-content"/>').append(l())).append(h('<div class="dtr-modal-close">×</div>').click(function () { k() }))).append(h('<div class="dtr-modal-background"/>').click(function () { k() })).appendTo("body"); h(b).on("keyup.dtr", function (n) { 27 === n.keyCode && (n.stopPropagation(), k()) }) } c && c.header && h("div.dtr-modal-content").prepend("<h2>" + c.header(i) + "</h2>") } } }; a.defaults = { breakpoints: a.breakpoints, auto: !0, details: { display: a.display.childRow, renderer: function (i, c, j) { return (i = h.map(j, function (k) { return k.hidden ? '<li data-dtr-index="' + k.columnIndex + '" data-dt-row="' + k.rowIndex + '" data-dt-column="' + k.columnIndex + '"><span class="dtr-title">' + k.title + '</span> <span class="dtr-data">' + k.data + "</span></li>" : "" }).join("")) ? h('<ul data-dtr-index="' + c + '"/>').append(i) : !1 }, target: 0, type: "inline" }, orthogonal: "display" }; var f = h.fn.dataTable.Api; f.register("responsive()", function () { return this }); f.register("responsive.index()", function (c) { c = h(c); return { column: c.data("dtr-index"), row: c.parent().data("dtr-index") } }); f.register("responsive.rebuild()", function () { return this.iterator("table", function (c) { c._responsive && c._responsive._classLogic() }) }); f.register("responsive.recalc()", function () { return this.iterator("table", function (c) { c._responsive && (c._responsive._resizeAuto(), c._responsive._resize()) }) }); f.register("responsive.hasHidden()", function () { var c = this.context[0]; return c._responsive ? -1 !== h.inArray(!1, c._responsive.s.current) : !1 }); a.version = "2.0.2"; h.fn.dataTable.Responsive = a; h.fn.DataTable.Responsive = a; h(b).on("preInit.dt.dtr", function (i, c) { if ("dt" === i.namespace && (h(c.nTable).hasClass("responsive") || h(c.nTable).hasClass("dt-responsive") || c.oInit.responsive || g.defaults.responsive)) { var j = c.oInit.responsive; !1 !== j && new a(c, h.isPlainObject(j) ? j : {}) } }); return a });