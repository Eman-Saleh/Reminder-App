@model Reminder.FE.Models.UserModel
@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization

@{
    ViewData["Title"] ="Add Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
<div class="accordion" id="accordionPanelsStayOpenExample">
    <div class="row">
        <div class="col-12">
            <div class="card accordion-item my-4">
                <div class="card-header accordion-header p-0 position-relative mt-n4 mx-3 z-index-2" id="panelsStayOpen-headingOne">
                        <h6 >Add Edit User</h6>

                </div>
                <div id="panelsStayOpen-collapseOne" class="accordion-collapse collapse show" aria-labelledby="panelsStayOpen-headingOne">
                    <div class="card-body p-4 accordion-body">
                        <form asp-controller="User" asp-action="AddEditUser" method="post">
                               @Html.HiddenFor(model=> model.Id)
   <div class="row mb-3">
                            <div class="col-md-3">
                                @*make it drobdown*@
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                                <span class="fg-red">*</span>


                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" }, @onchange = "changes=true;" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="row form-group">
                            
                            <div class="col-md-4">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                <span class="fg-red">*</span>


                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group ">
                            <div class="col-sm-12 text-center">
                                <input type="submit"  value="save" onclick="changes=false" class="btn btn-orange mt-4" />
                            </div>
                        </div>
                    </form> 

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>

        var changes = false;
        window.onbeforeunload = function () {
            if (changes) {
                var message = "";
                if (confirm(message)) return true;
                else return false;
            }
        }
        </script>
}